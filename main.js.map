{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/followers/followers.component.css","webpack:///./src/app/followers/followers.component.html","webpack:///./src/app/followers/followers.component.ts","webpack:///./src/app/material-module.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/shared/profile.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACQ;AACM;AAErE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAC,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;IACtD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE;CACrD,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACf7B,+DAA+D,+H;;;;;;;;;;;ACA/D,kD;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACqB;AACtC;AACe;AACU;AACV;AAEA;AACT;AACgB;AACR;AACG;AACW;AAqBrE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2EAAgB;gBAChB,kFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,oEAAgB;gBAChB,uEAAa;gBACb,4FAAuB;gBACvB,0DAAW;gBACX,kEAAmB;gBACnB,qEAAmB;gBACnB,oEAAkB;gBAClB,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,uEAAc,CAAC;YAC3B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACjCtB,+DAA+D,mJ;;;;;;;;;;;ACA/D,inBAAinB,cAAc,8T;;;;;;;;;;;;;;;;;;;ACA7kB;AACO;AAEE;AAQ3D;IAEE,4BAAoB,cAA8B,EAC9B,KAAqB,EACrB,MAAc;QAFlC,iBAOC;QAPmB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAChC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE;aACrC,SAAS,CAAC,UAAC,SAAS;YACnB,KAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;IAC/D,CAAC;IAhBU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,+GAAyC;;SAE1C,CAAC;+EAGoC,sEAAc;YACvB,8DAAc;YACb,sDAAM;OAJvB,kBAAkB,CAiB9B;IAAD,yBAAC;CAAA;AAjB8B;;;;;;;;;;;;;;;;;;;;;;;;ACXuB;AACC;AACL;AACF;AACH;AACN;AAqCZ;AA8C3B;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QA5C9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAU;gBACV,iEAAc;gBACd,+DAAa;gBACb,qEAAc;gBACd,uEAAqB;gBACrB,gEAAc;gBACd,sEAAoB;gBACpB,iEAAe;gBACf,uEAAqB;gBACrB,+DAAa;gBACb,mEAAiB;gBACjB,gEAAc;gBACd,kEAAgB;gBAChB,qEAAmB;gBACnB,iEAAe;gBACf,kEAAgB;gBAChB,oEAAkB;gBAClB,mEAAiB;gBACjB,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,+DAAa;gBACb,qEAAmB;gBACnB,oEAAkB;gBAClB,sEAAoB;gBACpB,0EAAwB;gBACxB,gEAAc;gBACd,iEAAe;gBACf,iEAAe;gBACf,kEAAgB;gBAChB,iEAAe;gBACf,sEAAoB;gBACpB,mEAAiB;gBACjB,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,kEAAgB;gBAChB,kEAAgB;gBAChB,+DAAa;gBACb,sEAAe;aAChB;SACF,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACxF/B,0BAA0B,yBAAyB,KAAK,+CAA+C,+S;;;;;;;;;;;ACAvG,wYAAwY,mBAAmB,kOAAkO,yBAAyB,+OAA+O,6BAA6B,+FAA+F,6BAA6B,yFAAyF,0BAA0B,4FAA4F,0BAA0B,2NAA2N,qBAAqB,qGAAqG,wBAAwB,mGAAmG,sBAAsB,qGAAqG,qBAAqB,sGAAsG,yBAAyB,iGAAiG,oBAAoB,0GAA0G,2BAA2B,mMAAmM,0BAA0B,oOAAoO,qBAAqB,mYAAmY,iBAAiB,sBAAsB,aAAa,mEAAmE,oBAAoB,2DAA2D,iBAAiB,wLAAwL,iBAAiB,8FAA8F,cAAc,osBAAosB,cAAc,2R;;;;;;;;;;;;;;;;;;;ACAruI;AACO;AAEE;AAU3D;IASE,0BAAoB,cAA8B,EAC9B,KAAqB,EACrB,MAAc;QAFlC,iBASC;QATmB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAChC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,UAAC,OAAO;YACrD,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,SAAS;YACrD,KAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,mCAAQ,GAAR;IAEA,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;aACnC,SAAS,CAAC,UAAC,MAAM;YAChB,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAY,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;IACjE,CAAC;IAlCU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;+EAUoC,sEAAc;YACvB,8DAAc;YACb,sDAAM;OAXvB,gBAAgB,CAmC5B;IAAD,uBAAC;CAAA;AAnC4B;;;;;;;;;;;;;;;;;;;;;;ACbc;AACoB;AAE9C;AACM;AAQvB;IAEE,wBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC1C,CAAC;IAED,uCAAc,GAAd;QACC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,8BAA8B,EAAG;YACtE,OAAO,EAAE,MAAM;YACf,YAAY,EAAE,MAAM;SACnB,CAAC;IACJ,CAAC;IAED,uCAAc,GAAd;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,+CAA+C,EAAG;YACtF,OAAO,EAAE,MAAM;YACf,YAAY,EAAE,MAAM;SACrB,CAAC;IACJ,CAAC;IAED,qCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,qDAAqD,EAAG;YAC5F,OAAO,EAAE,MAAM;YACf,YAAY,EAAE,MAAM;SACrB,CAAC;IACJ,CAAC;IACD,yCAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,yDAAyD,EAAG;YAChG,OAAO,EAAE,MAAM;YACf,YAAY,EAAE,MAAM;SACrB,CAAC;IACJ,CAAC;IA9BU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAGgC,+DAAU;OAF/B,cAAc,CAgC1B;IAAD,qBAAC;CAAA;AAhC0B;;;;;;;;;;;;;ACZ3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './profile/profile.component';\nimport { FollowersComponent } from './followers/followers.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo:'/profile', pathMatch: 'full' },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'followers', component: FollowersComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'usersApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core'; \nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatNativeDateModule } from '@angular/material';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { DemoMaterialModule } from './material-module';\nimport { ProfileService } from './shared/profile.service';\nimport { FollowersComponent } from './followers/followers.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfileComponent,\n    FollowersComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatNativeDateModule,\n    DemoMaterialModule,\n    HttpClientModule\n  ],\n  providers: [ProfileService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvbGxvd2Vycy9mb2xsb3dlcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- Followers Page -->\\n\\n<nav class=\\\"navbar navbar-expand-lg bg-dark navbar-dark text-white\\\">\\n    <a routerLink=\\\"/profile\\\" class=\\\"navbar-brand\\\"><h4>Github Profiles</h4></a>\\n</nav>\\n<ng-template [ngIf]=\\\"userFollower\\\">\\n<div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div *ngFor=\\\"let user of userFollower\\\" class=\\\"col-xl-2 col-lg-3 col-md-3 col-sm-4 col-6 mt-4\\\">\\n                <div class=\\\"border\\\">\\n                    <img [src]=\\\"user.avatar_url\\\" class=\\\"img-thumbnail\\\">\\n                    <div class=\\\"caption text-center mt-1\\\">\\n                        <h5>{{ user.login }}</h5>\\n                        <p>\\n                             <button (click)=\\\"viewUser(user)\\\" class=\\\"btn btn-primary btn-sm\\\" role=\\\"button\\\">More Info</button>\\n                        </p>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    </ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ProfileService } from '../shared/profile.service';\nimport { Profile } from '../shared/profile.model';\n\n@Component({\n  selector: 'app-followers',\n  templateUrl: './followers.component.html',\n  styleUrls: ['./followers.component.css']\n})\nexport class FollowersComponent implements OnInit {\nuserFollower: Profile[];\n  constructor(private profileService: ProfileService,\n              private route: ActivatedRoute,\n              private router: Router) { \n    this.profileService.getUserFollowers()\n    .subscribe((followers) => {\n      this.userFollower = followers;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  viewUser() {\n    this.router.navigate(['/profile'], {relativeTo: this.route});\n  }\n}","import {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}","module.exports = \".badge {\\r\\n    margin-left: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5iYWRnZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG59Il19 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg bg-dark navbar-dark text-white\\\">\\r\\n    <a routerLink=\\\"/profile\\\" class=\\\"navbar-brand\\\"><h4>Github Profiles</h4></a>\\r\\n</nav>\\r\\n\\r\\n<!-- Details Page -->\\r\\n\\r\\n<ng-template [ngIf]=\\\"selectedUser\\\">\\r\\n    <div class=\\\"container mt-5\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <h5 class=\\\"card-header\\\">\\r\\n                {{selectedUser.name}}\\r\\n            </h5>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <img class=\\\"img-thumbnail\\\" src=\\\"{{selectedUser.avatar_url}}\\\" alt=\\\"\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <div class=\\\"stats\\\">\\r\\n                                <span class=\\\"badge badge-primary\\\">Public Repos: {{ selectedUser.public_repos }}</span>\\r\\n                                <span class=\\\"badge badge-success\\\">Public Gists: {{ selectedUser.public_gists }}</span>\\r\\n                                <span class=\\\"badge badge-info\\\">Followers: {{ selectedUser.followers }}</span>\\r\\n                                <span class=\\\"badge badge-warning\\\">Following: {{ selectedUser.following }}</span>\\r\\n                            </div><br>\\r\\n                            <ul class=\\\"list-group list-group-flush\\\">\\r\\n                                <li class=\\\"list-group-item\\\"><strong>Username: </strong> {{ selectedUser.name }} </li>\\r\\n                                <li class=\\\"list-group-item\\\"><strong>Company: </strong> {{ selectedUser.company }} </li>\\r\\n                                <li class=\\\"list-group-item\\\"><strong>Email: </strong> {{ selectedUser.email }} NA </li>\\r\\n                                <li class=\\\"list-group-item\\\"><strong>Blog: </strong> {{ selectedUser.blog }} </li>\\r\\n                                <li class=\\\"list-group-item\\\"><strong>Location: </strong> {{ selectedUser.location }} </li>\\r\\n                                <li class=\\\"list-group-item\\\"><strong>Bio: </strong> {{ selectedUser.bio }} </li>\\r\\n                                <li class=\\\"list-group-item\\\"><strong>Member Since: </strong> {{ selectedUser.created_at }} </li>\\r\\n                            </ul><br>\\r\\n                            <button (click)=\\\"viewFollower()\\\" class=\\\"btn btn-primary\\\">Number of followers<span class=\\\"badge badge-light\\\">{{ selectedUser.followers }}</span></button>\\r\\n                      </div>\\r\\n                 </div>   \\r\\n             </div>        \\r\\n        </div>\\r\\n        <div class=\\\"card mt-3\\\">\\r\\n            <h5 class=\\\"card-header\\\">\\r\\n                {{ selectedUser.name }}'s Repos\\r\\n            </h5>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div *ngFor=\\\"let repo of repos\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-9\\\">\\r\\n                                    <h4><a href=\\\"{{ repo.html_url }}\\\" target=\\\"blank\\\">{{ repo.name }}</a></h4>\\r\\n                                    <p>Description: {{ repo.description }}</p>\\r\\n                                    <p>Language: {{ repo.language }}</p>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <span class=\\\"badge badge-primary\\\">{{ repo.watchers }} Watchers</span>\\r\\n                                    <span class=\\\"badge badge-success\\\">{{ repo.forks }} Forks</span>\\r\\n                                </div>\\r\\n                            </div><hr>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>     \\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<!-- Entry Page (List of all the users) -->\\r\\n\\r\\n<ng-template [ngIf]=\\\"!selectedUser\\\">\\r\\n<div class=\\\"container\\\">\\r\\n   <div class=\\\"row\\\">\\r\\n     <div *ngFor=\\\"let user of users\\\" class=\\\"col-xl-2 col-lg-3 col-md-3 col-sm-4 col-6 mt-4\\\">\\r\\n        <div class=\\\"border\\\">\\r\\n            <img [src]= \\\"user.avatar_url\\\" class=\\\"img-thumbnail\\\">\\r\\n            <div class=\\\"caption text-center mt-1\\\">\\r\\n                <h5>{{ user.login }}</h5>\\r\\n                <p>\\r\\n                    <button (click)=\\\"viewUser()\\\" class=\\\"btn btn-primary btn-sm\\\" role=\\\"button\\\">More Info</button>\\r\\n                </p>\\r\\n            </div>\\r\\n        </div>\\r\\n     </div>\\r\\n   </div>\\r\\n</div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ProfileService } from '../shared/profile.service';\nimport { Profile } from '../shared/profile.model';\n\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n\n  users: Profile[];\n  selectedUser: Profile[];\n  repos: Profile[];\n  userFollower: Profile[];\n  \n\n  constructor(private profileService: ProfileService,\n              private route: ActivatedRoute,\n              private router: Router) { \n    this.profileService.getProfileInfo().subscribe((profile) => {\n      this.users = profile;\n    });\n    this.profileService.getUserRepos().subscribe((userrepos) => {\n      this.repos = userrepos;\n    });\n  }\n\n\n  ngOnInit() {\n        \n  }\n\n  viewUser() {\n    this.profileService.getUserDetails()\n    .subscribe((detail) => {\n      this.selectedUser = detail;\n    });\n  }\n\n  viewFollower() {\n    this.router.navigate(['/followers'], {relativeTo: this.route});\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Profile } from \"../shared/profile.model\";\nimport 'rxjs/Rx';\nimport 'rxjs/Operator';\nimport { Observable } from 'rxjs/Rx';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private httpClient: HttpClient) { \n  }\n\n  getProfileInfo(): Observable<Profile[]> {\n   return this.httpClient.get<Profile[]>(\"https://api.github.com/users\" , {\n    observe: 'body',  \n    responseType: 'json'\n    })\n  }\n\n  getUserDetails(): Observable<any> {\n    return this.httpClient.get<Profile[]>(\"https://api.github.com/users/akashdeepsinghal\" , {\n      observe: 'body',\n      responseType: 'json'\n    })\n  }\n\n  getUserRepos(): Observable<any> {\n    return this.httpClient.get<Profile[]>(\"https://api.github.com/users/akashdeepsinghal/repos\" , {\n      observe: 'body',\n      responseType: 'json'\n    })\n  }\n  getUserFollowers(): Observable<any> {\n    return this.httpClient.get<Profile[]>(\"https://api.github.com/users/akashdeepsinghal/followers\" , {\n      observe: 'body',\n      responseType: 'json'\n    })\n  }\n\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}